{"version":3,"sources":["../../src/browser/dom.ts","../../src/isomorphic/prelude.ts","../../src/isomorphic/iterator.ts","../../src/isomorphic/rand.ts","../src/noact.ts","../../src/isomorphic/dom.ts","../src/noact-elements.ts","js/components/readme.ts","../../src/isomorphic/validation.ts","js/components/todo/00_input.ts","js/components/todo/02_listing.ts","js/components/todo/01_select.ts","js/components/todo/todo.ts","js/state.ts","js/components/benchmark.ts","js/layout/body.ts","js/layout/footer.ts","js/layout/header.ts","js/layout/page.ts","js/entry.ts"],"names":[],"mappings":"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","file":"entry.474cba41.js","sourceRoot":"../example","sourcesContent":["export const $ = <E extends HTMLElement = HTMLElement>(\n  selector: string,\n  base = document.body,\n) => (base.querySelector(selector) ?? undefined) as E | undefined\n\nexport const $$ = <E extends HTMLElement = HTMLElement>(\n  selector: string,\n  base = document.body,\n) => [...base.querySelectorAll(selector)] as E[]\n\nexport const ready = () =>\n  new Promise<void>((resolve) =>\n    document.addEventListener(\"DOMContentLoaded\", resolve as any, {\n      once: true,\n    }),\n  )\n\nexport const wait_frame = () => new Promise<number>(requestAnimationFrame)\n\nexport const download = (uri: string, name = \"\") => {\n  const a = document.createElement(\"a\")\n  a.style.display = \"none\"\n  a.target = \"_blank\"\n  a.download = name\n  a.href = uri\n  document.body.append(a)\n  a.click()\n  a.remove()\n}\n","export const id = <T>(x: T) => x\n\nexport const str = (thing: any): string => thing.toString()\n\nexport const future = <T>() => {\n  let resolve: (value: T) => void = (undefined as any) as (err: any) => void\n  let reject: (err: any) => void = (undefined as any) as (err: any) => void\n  const promise = new Promise<T>((res, rej) => {\n    resolve = (value) => res(value)\n    reject = (err) => rej(err)\n  })\n  return { promise, resolve, reject }\n}\n\nexport const sleep = (ms: number) =>\n  new Promise<void>((resolve) => setTimeout(resolve, ms))\n\nexport const counter = () => ((i) => () => (i += 1))(0)\n\nexport const timer = () => {\n  let prev = performance.now()\n  return () => {\n    const temp = prev\n    const next = (prev = performance.now())\n    return next - temp\n  }\n}\n","import { str } from \"./prelude\"\n\nexport const range = function*(begin: number, end: number, step = 1) {\n  let nxt = begin\n  const cmp =\n    step > 0\n      ? (l: number, r: number) => l <= r\n      : (l: number, r: number) => l >= r\n  while (cmp(nxt, end)) {\n    yield nxt\n    nxt = nxt + step\n  }\n}\n\nexport const generate = function*<T>(gen: () => T, n: number) {\n  for (const _ of range(1, n)) {\n    yield gen()\n  }\n}\n\nexport const enumerate = function*<T>(\n  iterable: Iterable<T>,\n): Generator<[number, T]> {\n  let idx = 0\n  for (const el of iterable) {\n    yield [idx, el]\n    idx += 1\n  }\n}\n\nexport const take = function*<T>(n: number, iterable: Iterable<T>) {\n  for (const [idx, el] of enumerate(iterable)) {\n    if (idx < n) {\n      yield el\n    }\n  }\n}\n\nexport const drop = function*<T>(n: number, iterable: Iterable<T>) {\n  for (const [idx, el] of enumerate(iterable)) {\n    if (idx >= n) {\n      yield el\n    }\n  }\n}\n\nexport const map = function*<T, U>(trans: (_: T) => U, iterable: Iterable<T>) {\n  for (const el of iterable) {\n    yield trans(el)\n  }\n}\n\nexport const flat_map = function*<T, U>(\n  trans: (_: T) => U[],\n  iterable: Iterable<T>,\n) {\n  for (const el of iterable) {\n    for (const e of trans(el)) {\n      yield e\n    }\n  }\n}\n\nexport const compact_map = function*<T, U>(\n  trans: (_: T) => U | undefined,\n  iterable: Iterable<T>,\n) {\n  for (const el of iterable) {\n    const nxt = trans(el)\n    if (nxt !== undefined) {\n      yield nxt\n    }\n  }\n}\n\nexport const filter = function*<T>(\n  predicate: (_: T) => boolean,\n  iterable: Iterable<T>,\n) {\n  for (const el of iterable) {\n    if (predicate(el)) {\n      yield el\n    }\n  }\n}\n\nexport const reduce = <T, U>(\n  trans: (_: U, __: T) => U,\n  init: U,\n  iterable: Iterable<T>,\n) => {\n  let acc = init\n  for (const el of iterable) {\n    acc = trans(acc, el)\n  }\n  return acc\n}\n\nexport const count_by = <T>(\n  predicate: (_: T) => boolean | number,\n  iterable: Iterable<T>,\n) => reduce((a, e) => a + (predicate(e) as number), 0, iterable)\n\nexport const find_by = <T>(\n  predicate: (_: T) => boolean,\n  iterable: Iterable<T>,\n) => {\n  for (const el of iterable) {\n    if (predicate(el)) {\n      return el\n    }\n  }\n  return undefined\n}\n\nexport const zip = function*<T, U>(\n  iterable1: Iterable<T>,\n  iterable2: Iterable<U>,\n): Generator<[T, U]> {\n  const [iter1, iter2] = [\n    iterable1[Symbol.iterator](),\n    iterable2[Symbol.iterator](),\n  ]\n  while (true) {\n    const [r1, r2] = [iter1.next(), iter2.next()]\n    if (r1.done || r2.done) {\n      break\n    } else {\n      yield [r1.value, r2.value]\n    }\n  }\n}\n\nexport const interlace = function*<T>(e: T, iterable: Iterable<T>) {\n  let fst = true\n  for (const el of iterable) {\n    if (!fst) {\n      yield e\n    }\n    yield el\n    fst = false\n  }\n}\n\nexport const any = function*<T>(\n  predicate: (_: T) => boolean,\n  iterable: Iterable<T>,\n) {\n  let acc = false\n  for (const el of iterable) {\n    acc = acc || predicate(el)\n  }\n  return acc\n}\n\nexport const all = function*<T>(\n  predicate: (_: T) => boolean,\n  iterable: Iterable<T>,\n) {\n  let acc = true\n  for (const el of iterable) {\n    acc = acc && predicate(el)\n  }\n  return acc\n}\n\nexport const group_by = <T, U extends keyof any>(\n  key_by: (_: T) => U,\n  iterable: Iterable<T>,\n) => {\n  const res = new Map<U, T[] | undefined>()\n  for (const el of iterable) {\n    const key = key_by(el)\n    if (!res.has(key)) {\n      res.set(key, [])\n    }\n    res.get(key)!.push(el)\n  }\n  return res\n}\n\nexport const sort_by = <T>(key_by: (_: T) => number, iterable: Iterable<T>) => {\n  const sort = (a: T, b: T) => key_by(a) - key_by(b)\n  return [...iterable].sort(sort)\n}\n\nexport const sort_by_keys = <T>(\n  keys_by: (_: T) => number[],\n  iterable: Iterable<T>,\n) => {\n  const sort = (a: T, b: T) => {\n    const zipped = zip(keys_by(a), keys_by(b))\n    for (const [lhs, rhs] of zipped) {\n      if (lhs !== rhs) {\n        return lhs - rhs\n      }\n    }\n    return 0\n  }\n  return [...iterable].sort(sort)\n}\n\nexport const unique_by = function*<T>(\n  key_by: (_: T) => any,\n  iterable: Iterable<T>,\n) {\n  const set = new Set()\n  for (const el of iterable) {\n    const key = key_by(el)\n    if (!set.has(key)) {\n      yield el\n    }\n    set.add(key)\n  }\n}\n\nexport const join = <T>(sep: string, iterable: Iterable<T>) => {\n  let s = \"\"\n  for (const el of interlace(sep, map(str, iterable))) {\n    s += el\n  }\n  return s\n}\n","export const float = (floor: number, celi: number) =>\n  Math.random() * (celi - floor) + floor\n\nexport const int = (floor: number, celi: number) =>\n  Math.floor(Math.random() * (celi - floor + 1)) + floor\n\nexport const choice = <T>(pool: T[]): T | undefined =>\n  pool[int(0, pool.length - 1)]\n\n// https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\nexport const shuffle = <T>(pool: T[]) => {\n  const res = [...pool]\n  for (let i = res.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    ;[res[i], res[j]] = [res[j], res[i]]\n  }\n  return res\n}\n","type Props<T> = Partial<Omit<T, \"style\" | \"dataset\" | \"classList\">> & {\n  style?: Partial<CSSStyleDeclaration>\n  dataset?: Record<string, string | number>\n  txt?: string\n}\ntype E = HTMLElementTagNameMap & Record<string, HTMLElement>\nexport type NNode<T extends HTMLElement = HTMLElement> = (() => T) & { tagName: keyof E; props: Props<T>; children: NNode[] }\nexport type MaybeNNode = NNode | undefined\n\nexport const Render = <T extends keyof E>(tagName: T) => (p: Props<E[T]> = {}, ...c: MaybeNNode[]): NNode<E[T]> => {\n  const props = p.txt ? { ...p, textContent: p.txt } : p\n  const { style = {}, dataset = {}, ..._p } = props\n  const children = c.filter((c) => c) as NNode[]\n  const render = ((element?: E[T]) => () => {\n    if (element) {\n      return element\n    }\n    const e = (element = document.createElement(tagName))\n    Object.entries(_p).map(([k, v]) => (e[k] = v))\n    Object.entries(style).map(([k, v]) => (e.style[k] = v))\n    Object.entries(dataset).map(([k, v]) => (e.dataset[k] = v as string))\n    children.map((child) => e.append(child()))\n    return e\n  })(undefined)\n  return Object.assign(render, { tagName, props, children })\n}\n\nconst patchProps = (prev: NNode, next: NNode) => {\n  const e = prev()\n  const { style: pStyle = {}, dataset: pData = {}, ...pProps } = prev.props\n  const { style: nStyle = {}, dataset: nData = {}, ...nProps } = next.props\n  Object.entries(pProps).map(([k]) => nProps[k] === undefined && (e[k] = undefined))\n  Object.entries(nProps).map(([k, v]) => pProps[k] !== v && (e[k] = v))\n  Object.entries(pStyle).map(([k]) => nStyle[k] === undefined && e.style.removeProperty(k))\n  Object.entries(nStyle).map(([k, v]) => pStyle[k] !== v && (e.style[k] = v))\n  Object.entries(pData).map(([k]) => nData[k] === undefined && Reflect.deleteProperty(e.dataset, k))\n  Object.entries(nData).map(([k, v]) => pData[k] !== v && (e.dataset[k] = v as string))\n}\n\nconst longZip = <T>(a1: T[], a2: T[]) => [...Array(Math.max(a1.length, a2.length)).keys()].map((_, i) => [a1[i], a2[i]])\n\nconst reconciliate = (prev: NNode, next: NNode): NNode => {\n  patchProps(prev, next)\n  const element = prev()\n  const children = longZip(prev.children, next.children).map(([p, n]) =>\n    p && !n ? p().remove()\n    : !p && n ? (element.append(n()), n)\n    : p.tagName !== n.tagName ? (p().replaceWith(n()), n)\n    : reconciliate(p, n)\n  ).filter((c) => c)\n  return Object.assign(prev, { props: next.props, children })\n}\n\nexport const NewRNode = (element: HTMLElement, props: Record<string, any> = {}, ...children: MaybeNNode[]): NNode =>\n  Object.assign(() => element, { tagName: element.tagName, props, children: children.filter((c) => c) as NNode[] })\n\nexport const NewMountPoint = (root: HTMLElement | ShadowRoot) => {\n  let prev = NewRNode(root as any)\n  return (...children: MaybeNNode[]) => (prev = reconciliate(prev, NewRNode(root as any, {}, ...children)))\n}\n","import { join } from \"./iterator\"\n\nexport const cn = (...classes: (string | Record<string, boolean>)[]) => {\n  const classlist = []\n\n  for (const c of classes) {\n    if (typeof c === \"string\") {\n      classlist.push(c)\n    } else {\n      for (const [k, v] of Object.entries(c)) {\n        if (v) {\n          classlist.push(k)\n        }\n      }\n    }\n  }\n\n  return join(\" \", classlist)\n}\n","import { Render } from \"./noact\"\n\n/*\n * - GENERATED CODE -\n *\n * This list can be scraped from https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n\n;(() => {\n  const selector = `li.toggle:nth-child(7) > details:nth-child(1) > ol > li code` // Update me if needed\n  const stringify = (e) => {\n    const tn = e.tagName.toLowerCase()\n    return `export const ${tn} = Render('${tn}')`\n  }\n  const tags = $$(selector).map((a) => a.textContent.replace(/[<|>]/g, ``))\n  const elements = tags.sort().map((t) => document.createElement(t))\n  return elements.map(stringify).join(`\\n`)\n})()\n\n * Minor fixups might be required, ie. missing h2 - h6\n *\n * - GENERATED CODE -\n */\n\nexport const a = Render(\"a\")\nexport const abbr = Render(\"abbr\")\nexport const acronym = Render(\"acronym\")\nexport const address = Render(\"address\")\nexport const applet = Render(\"applet\")\nexport const area = Render(\"area\")\nexport const article = Render(\"article\")\nexport const aside = Render(\"aside\")\nexport const audio = Render(\"audio\")\nexport const b = Render(\"b\")\nexport const base = Render(\"base\")\nexport const basefont = Render(\"basefont\")\nexport const bdi = Render(\"bdi\")\nexport const bdo = Render(\"bdo\")\nexport const bgsound = Render(\"bgsound\")\nexport const big = Render(\"big\")\nexport const blink = Render(\"blink\")\nexport const blockquote = Render(\"blockquote\")\nexport const body = Render(\"body\")\nexport const br = Render(\"br\")\nexport const button = Render(\"button\")\nexport const canvas = Render(\"canvas\")\nexport const caption = Render(\"caption\")\nexport const center = Render(\"center\")\nexport const cite = Render(\"cite\")\nexport const code = Render(\"code\")\nexport const col = Render(\"col\")\nexport const colgroup = Render(\"colgroup\")\nexport const command = Render(\"command\")\nexport const content = Render(\"content\")\nexport const data = Render(\"data\")\nexport const datalist = Render(\"datalist\")\nexport const dd = Render(\"dd\")\nexport const del = Render(\"del\")\nexport const details = Render(\"details\")\nexport const dfn = Render(\"dfn\")\nexport const dialog = Render(\"dialog\")\nexport const dir = Render(\"dir\")\nexport const div = Render(\"div\")\nexport const dl = Render(\"dl\")\nexport const dt = Render(\"dt\")\nexport const element = Render(\"element\")\nexport const em = Render(\"em\")\nexport const embed = Render(\"embed\")\nexport const fieldset = Render(\"fieldset\")\nexport const figcaption = Render(\"figcaption\")\nexport const figure = Render(\"figure\")\nexport const font = Render(\"font\")\nexport const footer = Render(\"footer\")\nexport const form = Render(\"form\")\nexport const frame = Render(\"frame\")\nexport const frameset = Render(\"frameset\")\nexport const h1 = Render(\"h1\")\nexport const h2 = Render(\"h2\")\nexport const h3 = Render(\"h3\")\nexport const h4 = Render(\"h4\")\nexport const h5 = Render(\"h5\")\nexport const h6 = Render(\"h6\")\nexport const head = Render(\"head\")\nexport const header = Render(\"header\")\nexport const hgroup = Render(\"hgroup\")\nexport const hr = Render(\"hr\")\nexport const html = Render(\"html\")\nexport const i = Render(\"i\")\nexport const iframe = Render(\"iframe\")\nexport const image = Render(\"image\")\nexport const img = Render(\"img\")\nexport const input = Render(\"input\")\nexport const ins = Render(\"ins\")\nexport const isindex = Render(\"isindex\")\nexport const kbd = Render(\"kbd\")\nexport const keygen = Render(\"keygen\")\nexport const label = Render(\"label\")\nexport const legend = Render(\"legend\")\nexport const li = Render(\"li\")\nexport const link = Render(\"link\")\nexport const listing = Render(\"listing\")\nexport const main = Render(\"main\")\nexport const map = Render(\"map\")\nexport const mark = Render(\"mark\")\nexport const marquee = Render(\"marquee\")\nexport const menu = Render(\"menu\")\nexport const menuitem = Render(\"menuitem\")\nexport const meta = Render(\"meta\")\nexport const meter = Render(\"meter\")\nexport const multicol = Render(\"multicol\")\nexport const nav = Render(\"nav\")\nexport const nextid = Render(\"nextid\")\nexport const nobr = Render(\"nobr\")\nexport const noembed = Render(\"noembed\")\nexport const noframes = Render(\"noframes\")\nexport const noscript = Render(\"noscript\")\nexport const object = Render(\"object\")\nexport const ol = Render(\"ol\")\nexport const optgroup = Render(\"optgroup\")\nexport const option = Render(\"option\")\nexport const output = Render(\"output\")\nexport const p = Render(\"p\")\nexport const param = Render(\"param\")\nexport const picture = Render(\"picture\")\nexport const plaintext = Render(\"plaintext\")\nexport const pre = Render(\"pre\")\nexport const progress = Render(\"progress\")\nexport const q = Render(\"q\")\nexport const rb = Render(\"rb\")\nexport const rp = Render(\"rp\")\nexport const rt = Render(\"rt\")\nexport const rtc = Render(\"rtc\")\nexport const ruby = Render(\"ruby\")\nexport const s = Render(\"s\")\nexport const samp = Render(\"samp\")\nexport const script = Render(\"script\")\nexport const section = Render(\"section\")\nexport const select = Render(\"select\")\nexport const shadow = Render(\"shadow\")\nexport const slot = Render(\"slot\")\nexport const small = Render(\"small\")\nexport const source = Render(\"source\")\nexport const spacer = Render(\"spacer\")\nexport const span = Render(\"span\")\nexport const strike = Render(\"strike\")\nexport const strong = Render(\"strong\")\nexport const style = Render(\"style\")\nexport const sub = Render(\"sub\")\nexport const summary = Render(\"summary\")\nexport const sup = Render(\"sup\")\nexport const table = Render(\"table\")\nexport const tbody = Render(\"tbody\")\nexport const td = Render(\"td\")\nexport const template = Render(\"template\")\nexport const textarea = Render(\"textarea\")\nexport const tfoot = Render(\"tfoot\")\nexport const th = Render(\"th\")\nexport const thead = Render(\"thead\")\nexport const time = Render(\"time\")\nexport const title = Render(\"title\")\nexport const tr = Render(\"tr\")\nexport const track = Render(\"track\")\nexport const tt = Render(\"tt\")\nexport const u = Render(\"u\")\nexport const ul = Render(\"ul\")\nexport const video = Render(\"video\")\nexport const wbr = Render(\"wbr\")\nexport const xmp = Render(\"xmp\")\n","import { cn } from \"nda/dist/isomorphic/dom\"\nimport {\n  div,\n  a,\n  h1,\n  strike,\n  span,\n  p,\n  i,\n  hr,\n  ul,\n  li,\n  b,\n  h2,\n  img,\n  section,\n  h6,\n  h4,\n} from \"../../../src/noact-elements\"\n\nexport type ReadmeProps = {}\n\nexport const Readme = ({}: ReadmeProps) =>\n  section(\n    { id: \"readme\", className: cn(\"lightly-bordered\") },\n    div(\n      { id: \"readme-header\", className: cn(\"px-6\", \"py-1\") },\n      h4(\n        { className: \"mp-0\" },\n        i({ className: \"fas fa-book\" }),\n        span({ txt: \" README.md\" }),\n      ),\n    ),\n    div(\n      { id: \"readme-body\", className: cn(\"px-6\", \"pt-1\") },\n      h1(\n        {},\n        a(\n          { href: \"https://ms-jpq.github.io/noact\" },\n          strike({ txt: \"Re\" }),\n          span({ txt: \"Noact\" }),\n        ),\n      ),\n      hr(),\n      p({ txt: \"Noact is a minimal self-rendering Virtual DOM library.\" }),\n      ul(\n        {},\n        li(\n          {},\n          b({ txt: \"Declarative:\" }),\n          span({\n            txt:\n              \"Pretty much like React, without the JSX compilation of course, hence the name.\",\n          }),\n        ),\n        li(\n          {},\n          b({ txt: \"Type safe:\" }),\n          span({ txt: \"Noact is completely typesafe, which means you get\" }),\n          a({\n            txt: \"static type checking\",\n            href:\n              \"https://github.com/ms-jpq/Noact/blob/master/_assets/auto_complete.gif\",\n          }),\n          span({ txt: \"for free!\" }),\n        ),\n        li(\n          {},\n          b({ txt: \"Simple:\" }),\n          a({\n            txt: \"Only 60 lines\",\n            href: \"https://github.com/ms-jpq/Noact/blob/master/src/noact.ts\",\n          }),\n          span({\n            txt:\n              \"of type declarations & rendering code. (and 10ish lines of code-gen code)\",\n          }),\n        ),\n      ),\n      hr(),\n      h2({ txt: \"How it feels to write Noact\" }),\n      img({\n        className: \"img-responsive\",\n        src:\n          \"https://raw.githubusercontent.com/ms-jpq/Noact/master/_assets/demo.gif\",\n      }),\n      p({}, b({ txt: \"- Explosions -\" })),\n      p(\n        {},\n        span({ txt: \"Even has support for\" }),\n        b({ txt: \"style auto complete\" }),\n      ),\n      img({\n        className: \"img-responsive\",\n        src:\n          \"https://raw.githubusercontent.com/ms-jpq/Noact/master/_assets/type_demo.png\",\n      }),\n      hr(),\n      h2({ txt: \"Source code\" }),\n      ul(\n        {},\n        li(\n          {},\n          a({\n            txt: \"Rendering Engine\",\n            href: \"https://github.com/ms-jpq/noact/tree/master/src\",\n          }),\n        ),\n        li(\n          {},\n          a({\n            txt: \"This Page\",\n            href: \"https://github.com/ms-jpq/noact/tree/master/example\",\n          }),\n        ),\n      ),\n    ),\n  )\n","export const non_empty = (thing: string | number | null | undefined) =>\n  (thing ?? \"\") !== \"\"\n","import { button, div, i, input, label } from \"../../../../src/noact-elements\"\nimport { cn } from \"nda/dist/isomorphic/dom\"\nimport { non_empty } from \"nda/dist/isomorphic/validation\"\n\nexport type TodoInputProps = {\n  oninput: (_: string) => void\n  idx: number\n}\n\nexport const TodoInput = ({ oninput, idx }: TodoInputProps) => {\n  const input_id = `todo-input-${idx}`\n  return div(\n    {\n      className: cn(\"todo-input\", \"px-6\", \"lab-inp-btn\"),\n    },\n    label({\n      htmlFor: input_id,\n      txt: \"I need to:\",\n    }),\n    div(\n      { className: cn(\"input-group\", \"d-flex\", \"flex-row\") },\n      input({\n        id: input_id,\n        className: \"flex-grow-1\",\n        placeholder: \"...\",\n        onchange: ({ target }) => {\n          const input = target as HTMLInputElement\n          const { value } = input\n          if (non_empty(value)) {\n            oninput(value)\n          }\n          input.value = \"\"\n        },\n      }),\n      button(\n        { className: cn(\"clickable\", \"flex-shrink-1\") },\n        i({ className: \"fas fa-reply\" }),\n      ),\n    ),\n  )\n}\n","import { button, div, i, li, ol, span } from \"../../../../src/noact-elements\"\nimport { cn } from \"nda/dist/isomorphic/dom\"\nimport { map } from \"nda/dist/isomorphic/iterator\"\nimport { TodoItem } from \"../../state\"\n\nexport type TodoListingProps = {\n  ontoggle: (_: TodoItem) => void\n  onremove: (_: TodoItem) => void\n  items: TodoItem[]\n}\n\nexport const TodoListing = ({ ontoggle, onremove, items }: TodoListingProps) =>\n  div(\n    { className: cn(\"todo-listing\", \"px-6\") },\n    ol(\n      {},\n      ...map(\n        (item) =>\n          li(\n            {\n              className: cn(\n                \"d-grid\",\n                \"grid-col\",\n                \"ac-baseline\",\n                \"ji-start\",\n                \"border-top-solid\",\n                \"border-thin\",\n                \"pt-4\",\n                \"py-1\",\n              ),\n            },\n            div(\n              {\n                className: cn(\"todo-message\", \"clickable\"),\n                onclick: () => ontoggle(item),\n              },\n              i({\n                className: cn(\n                  \"clickable\",\n                  item.status === \"todo\"\n                    ? \"far fa-check-square\"\n                    : \"fas fa-check-square\",\n                ),\n              }),\n              span({ txt: item.message }),\n            ),\n            button({\n              className: cn(\"clickable\", \"border-clear\", \"js-end\", \"font-w900\"),\n              txt: \"×\",\n              onclick: () => onremove(item),\n            }),\n          ),\n        items,\n      ),\n    ),\n  )\n","import { button, div, h4 } from \"../../../../src/noact-elements\"\nimport { cn } from \"nda/dist/isomorphic/dom\"\nimport { View } from \"../../state\"\n\nexport type TodoSelectProps = {\n  onselect: (_: View) => void\n  viewing: View\n}\n\nexport const TodoSelect = ({ onselect, viewing }: TodoSelectProps) =>\n  div(\n    { className: cn(\"todo-select\", \"px-6\", \"mt-4\") },\n    button(\n      {\n        className: cn({ active: viewing === \"todo\" }),\n        onclick: () => onselect(\"todo\"),\n      },\n      h4({ txt: \"Remaining\" }),\n    ),\n    button(\n      {\n        className: cn({ active: viewing === \"done\" }),\n        onclick: () => onselect(\"done\"),\n      },\n      h4({ txt: \"Done\" }),\n    ),\n    button(\n      {\n        className: cn({ active: viewing === \"all\" }),\n        onclick: () => onselect(\"all\"),\n      },\n      h4({ txt: \"Showall\" }),\n    ),\n  )\n","import { cn } from \"nda/dist/isomorphic/dom\"\nimport { h2, section, p, div } from \"../../../../src/noact-elements\"\nimport { TodoInput, TodoInputProps } from \"./00_input\"\nimport { TodoListing, TodoListingProps } from \"./02_listing\"\nimport { TodoSelect, TodoSelectProps } from \"./01_select\"\n\nexport type TodoProps = {\n  still_todo_count: number\n  todo_sections: number\n} & TodoInputProps &\n  TodoSelectProps &\n  TodoListingProps\n\nexport const Todo = ({\n  oninput,\n  onselect,\n  ontoggle,\n  onremove,\n  viewing,\n  items,\n  idx,\n  todo_sections,\n  still_todo_count,\n}: TodoProps) =>\n  section(\n    {\n      className: cn(\"todo\", \"lightly-bordered\"),\n    },\n    div(\n      {\n        className: cn(\n          \"todo-header\",\n          \"d-grid\",\n          \"grid-col\",\n          \"jc-space-between\",\n          \"ai-baseline\",\n          \"px-6\",\n        ),\n      },\n      h2({ className: cn(\"todo-title\", \"mb-0\"), txt: \"TODO\" }),\n      p({\n        className: cn(\"todo-meta\", \"text-right\"),\n        txt: `${idx} of ${todo_sections} synchronized`,\n      }),\n    ),\n    TodoInput({ oninput, idx }),\n    TodoSelect({ onselect, viewing }),\n    TodoListing({ ontoggle, onremove, items }),\n    p({\n      className: cn(\"todo-info\", \"px-6\", \"my-1\"),\n      txt: `${still_todo_count} items left`,\n    }),\n  )\n","export type View = \"todo\" | \"done\" | \"all\"\n\nexport type TodoStatus = \"done\" | \"todo\"\n\nexport type TodoItem = {\n  id: number\n  last_update: number\n  status: TodoStatus\n  message: string\n}\n\nexport type State = {\n  todo_sections: number\n  viewing: {\n    view: View\n    last_update: number\n  }\n  items: TodoItem[]\n}\n\nexport const [MIN_TODOS, MAX_TODOS] = [1, 100]\n","import { cn } from \"nda/dist/isomorphic/dom\"\nimport { str } from \"nda/dist/isomorphic/prelude\"\nimport {\n  button,\n  div,\n  input,\n  label,\n  output,\n  section,\n  h2,\n} from \"../../../src/noact-elements\"\nimport { MIN_TODOS, MAX_TODOS } from \"../state\"\n\nexport type BenchmarkProps = {}\n\nexport const Benchmark = ({}: BenchmarkProps) =>\n  output({ className: \"benchmark-output\" })\n\nexport type BenchmarkControlProps = {\n  todo_sections: number\n  on_new_bench: (_: number) => void\n  onrandom: () => void\n} & BenchmarkProps\n\nexport const BenchmarkControl = ({\n  on_new_bench,\n  onrandom,\n  todo_sections,\n}: BenchmarkControlProps) => {\n  const input_id = \"benchmark-input-input\"\n  return section(\n    {\n      id: \"benchmark-control\",\n      className: cn(\n        \"d-grid\",\n        \"ai-centre\",\n        \"jc-space-between\",\n        \"lightly-bordered\",\n        \"px-6\",\n        \"py-2\",\n        \"row-gap-1\",\n        \"col-gap-4\",\n      ),\n    },\n    h2({ id: \"benchmark-title\", txt: \"Benchmark\" }),\n    div(\n      {\n        id: \"benchmark-input\",\n        className: cn(\"d-flex\", \"ai-baseline\", \"flex-wrap\"),\n      },\n      label({\n        htmlFor: input_id,\n        txt: `Put in ${MIN_TODOS}-${MAX_TODOS}:`,\n      }),\n      div(\n        { className: cn(\"input-group\", \"d-flex\", \"flex-grow-1\") },\n        input({\n          id: input_id,\n          type: \"number\",\n          className: cn(\"flex-grow-1\", \"text-right\"),\n          min: str(MIN_TODOS),\n          max: str(MAX_TODOS),\n          value: str(todo_sections),\n          onchange: ({ target }) => {\n            const { value } = target as HTMLInputElement\n            on_new_bench(parseInt(value))\n          },\n        }),\n        button({\n          className: cn(\"clickable\", \"border-thin\", \"flex-shrink-1\"),\n          txt: \"Random\",\n          onclick: onrandom,\n        }),\n      ),\n    ),\n    Benchmark({}),\n  )\n}\n","import { cn } from \"nda/dist/isomorphic/dom\"\nimport { main } from \"../../../src/noact-elements\"\nimport { map, range } from \"nda/dist/isomorphic/iterator\"\nimport { Readme } from \"../components/readme\"\nimport { Todo, TodoProps } from \"../components/todo/todo\"\nimport {\n  BenchmarkControlProps,\n  BenchmarkControl,\n} from \"../components/benchmark\"\n\nexport type BodyProps = {\n  todo_sections: number\n} & BenchmarkControlProps &\n  Omit<TodoProps, \"idx\">\n\nexport const Body = ({\n  todo_sections,\n  viewing,\n  items,\n  on_new_bench,\n  onrandom,\n  oninput,\n  ontoggle,\n  onremove,\n  onselect,\n  still_todo_count,\n}: BodyProps) =>\n  main(\n    { className: cn(\"d-grid\", \"row-gap-8\") },\n    Readme({}),\n    BenchmarkControl({ todo_sections, on_new_bench, onrandom }),\n    ...map(\n      (idx) =>\n        Todo({\n          idx,\n          viewing,\n          items,\n          oninput,\n          onremove,\n          onselect,\n          ontoggle,\n          todo_sections,\n          still_todo_count,\n        }),\n      range(1, todo_sections),\n    ),\n  )\n","import { footer, span, a, p } from \"../../../src/noact-elements\"\n\nexport type FooterProps = {}\n\nexport const Footer = ({}: FooterProps) =>\n  footer(\n    {},\n    p(\n      { className: \"text-centre\" },\n      span({ txt: \"© \" }),\n      a({ txt: \"ms-jpq\", href: \"https://ms-jpq.github.io\" }),\n    ),\n  )\n","import { cn } from \"nda/dist/isomorphic/dom\"\nimport { h1, header } from \"../../../src/noact-elements\"\n\nexport type HeaderProps = {}\n\nexport const Header = ({}: HeaderProps) =>\n  header(\n    {\n      className: cn(\n        \"d-grid\",\n        \"text-centre\",\n        \"ji-centre\",\n        \"lightly-bordered\",\n        \"py-8\",\n      ),\n    },\n    h1({ className: \"font-w500\", txt: \"This Page is Rendered Using Noact\" }),\n  )\n","import { Body, BodyProps } from \"./body\"\nimport { cn } from \"nda/dist/isomorphic/dom\"\nimport { div } from \"../../../src/noact-elements\"\nimport { filter } from \"nda/dist/isomorphic/iterator\"\nimport { Footer, FooterProps } from \"./footer\"\nimport { Header, HeaderProps } from \"./header\"\nimport { TodoItem, View } from \"../state\"\n\nconst item_visible = (view: View, last_view_update: number, item: TodoItem) => {\n  switch (view) {\n    case \"all\":\n      return true\n    case \"todo\":\n      return item.last_update > last_view_update || item.status === \"todo\"\n    case \"done\":\n      return item.last_update > last_view_update || item.status === \"done\"\n  }\n}\n\nexport type PageProps = {\n  last_view_update: number\n  header: HeaderProps\n  body: BodyProps\n  footer: FooterProps\n}\n\nexport const Page = ({ last_view_update, header, body, footer }: PageProps) => {\n  const items = [\n    ...filter(\n      (i) => item_visible(body.viewing, last_view_update, i),\n      body.items,\n    ),\n  ]\n  return div(\n    {\n      id: \"container\",\n      className: cn(\"d-grid\", \"mx-auto\", \"mt-12\", \"row-gap-12\"),\n    },\n    Header(header),\n    Body({ ...body, items }),\n    Footer(footer),\n  )\n}\n","import { $$, wait_frame } from \"nda/dist/browser/dom\"\nimport { BodyProps } from \"./layout/body\"\nimport {\n  count_by,\n  filter,\n  map,\n  sort_by_keys,\n} from \"nda/dist/isomorphic/iterator\"\nimport { counter, sleep, timer } from \"nda/dist/isomorphic/prelude\"\nimport { int, shuffle } from \"nda/dist/isomorphic/rand\"\nimport { NewMountPoint } from \"../../src/noact\"\nimport { Page, PageProps } from \"./layout/page\"\nimport {\n  State,\n  TodoItem,\n  TodoStatus,\n  View,\n  MIN_TODOS,\n  MAX_TODOS,\n} from \"./state\"\n\nconst inc = counter()\nconst mount = NewMountPoint(document.body)\n\nconst idx_by_status = (status: TodoStatus) => {\n  switch (status) {\n    case \"todo\":\n      return 1\n    case \"done\":\n      return 2\n    default:\n      throw new Error(\"invaild status\")\n  }\n}\n\nconst sort_todos = (items: TodoItem[]) =>\n  sort_by_keys((i) => [idx_by_status(i.status), i.last_update], items)\n\nconst INIT_ITEMS: TodoItem[] = sort_todos([\n  ...map(\n    (i) => ({ ...i, id: inc(), last_update: inc() }),\n    shuffle<Pick<TodoItem, \"status\" | \"message\">>([\n      { message: \"Printer ran out of juice again\", status: \"todo\" },\n      { message: \"Something about neighbour's cat\", status: \"todo\" },\n      { message: \"Go to bed before 1AM\", status: \"todo\" },\n      { message: \"Craig owes me money?\", status: \"todo\" },\n      { message: \"👋Hire me👋\", status: \"todo\" },\n      { message: \"Draw a prefect circle\", status: \"todo\" },\n      { message: \"Take out trash\", status: \"done\" },\n      { message: \"Ask Jenny for penny\", status: \"done\" },\n      { message: \"Get groceries\", status: \"done\" },\n      { message: \"Download Mob Psycho\", status: \"done\" },\n    ]),\n  ),\n])\n\nconst INIT_STATE: State = {\n  todo_sections: 1,\n  viewing: {\n    view: \"todo\",\n    last_update: Date.now(),\n  },\n  items: INIT_ITEMS,\n}\n\nconst invert_status = (status: TodoStatus) => {\n  switch (status) {\n    case \"todo\":\n      return \"done\"\n    case \"done\":\n      return \"todo\"\n    default:\n      throw new Error(\"invaild status\")\n  }\n}\n\nconst perf = async (draw: () => void) => {\n  const t = timer()\n  draw()\n  await sleep(0)\n  const elapsed = Math.round(t())\n  const count = $$(\"*\").length\n  const benchmarks = $$<HTMLOutputElement>(\".benchmark-output\")\n  for (const benchmark of benchmarks) {\n    benchmark.value = `rendered ${count} elements in ${elapsed}ms`\n  }\n}\n\nconst update = ({ todo_sections, viewing, items }: State) => {\n  const on_new_bench = (val: number) => {\n    const todo_sections = Math.min(MAX_TODOS, Math.max(MIN_TODOS, val))\n    update({ todo_sections, items, viewing })\n  }\n\n  const onrandom = () =>\n    update({ items, viewing, todo_sections: int(MIN_TODOS, MAX_TODOS) })\n\n  const oninput = (message: string) => {\n    const new_item: TodoItem = {\n      status: \"todo\",\n      id: inc(),\n      last_update: Date.now(),\n      message,\n    }\n    const new_items = [...items, new_item]\n    update({ todo_sections, items: new_items, viewing })\n  }\n\n  const ontoggle = (item: TodoItem) => {\n    const new_items = [\n      ...map(\n        (i) => ({\n          ...i,\n          status: i.id === item.id ? invert_status(i.status) : i.status,\n          last_update: i.id === item.id ? Date.now() : i.last_update,\n        }),\n        items,\n      ),\n    ]\n    update({ todo_sections, items: new_items, viewing })\n  }\n\n  const onremove = (item: TodoItem) => {\n    const new_items = [...filter((i) => i.id !== item.id, items)]\n    update({ todo_sections, items: new_items, viewing })\n  }\n\n  const onselect = (view: View) => {\n    if (view !== viewing.view) {\n      update({\n        todo_sections,\n        items: sort_todos(items),\n        viewing: { view, last_update: Date.now() },\n      })\n    }\n  }\n\n  const still_todo_count = count_by((i) => i.status === \"todo\", items)\n\n  const body: BodyProps = {\n    todo_sections,\n    viewing: viewing.view,\n    items,\n    onrandom,\n    on_new_bench,\n    oninput,\n    ontoggle,\n    onremove,\n    onselect,\n    still_todo_count,\n  }\n\n  const page: PageProps = {\n    last_view_update: viewing.last_update,\n    header: {},\n    body: body,\n    footer: {},\n  }\n\n  perf(() => mount(Page(page)))\n}\n\nupdate(INIT_STATE)\n"]}